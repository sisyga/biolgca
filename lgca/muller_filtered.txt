path <- "C:/Users/Franzi/PycharmProjects/biolgca/saved_data/"

library(ggmuller)
library(ape)

#name der Form "name.csv"
edges_input <- function(e_name){
    e_path <- paste(path, e_name, sep="")
    edges <- read.csv(e_path, header=T)

    return (edges)
}

trange_input <- function(t_name){
    t_path <- paste(path, t_name, sep="")
    trange <- read.csv(t_path, header=F, col.names="Generation")

    return (trange)
}

pop_input <- function(p_name){
    p_path <- paste(path, p_name, sep="")
    pop <- read.csv(p_path, header=T)

    return (pop)
}

create_tree <- function(e_name, save=False, filename="unknown"){
    e_path <- paste(path, e_name, sep="")
    edges <- read.csv(e_path, header=T)

    tree <- adj_matrix_to_tree(edges)
    tree$tip.label <- sort(1:length(tree$tip.label), decreasing = T)

    if (save==T) {
        jpeg(paste("C:/Users/Franzi/PycharmProjects/biolgca/pictures/", filename, "_tree.jpg"))
        plot(tree, show.tip.label = TRUE, tip.color = "slateblue4", cex=0.5)
        dev.off()
       }
    else {
        plot(tree, show.tip.label = TRUE, tip.color = "slateblue4")
    }
}

magic <- function(e_name, t_name, p_name, tbeg=0, tend=0){
    #1: Daten einlesen
    edges <- edges_input(e_name)
    nf <- nrow(edges)
    pop <- pop_input(p_name)
    print(tend)
    if(missing(t_name)) {
        time <- c(rep(tbeg:tend))
        trange <- rep(time, nf+1)
        steps <- length(time)
    }
    else {
        time <- trange_input(t_name)
        trange <- rep(time[,1], nf+1)
        steps <- length(time[,1])
    }


    ids = c(rep(0, each=steps))
    for(i in edges[,2]) ids <- append(ids, c(rep(i, steps)), length(ids))

    pdata <- data.frame(Generation=trange, Identity=ids, Population=pop)


    #2: plot-Daten erstellen
    plotdata <- get_Muller_df(edges, pdata)
    print("Fuer Ausgabe des Stammbaums create_tree(e_name) aufrufen!")
    Muller_plot(plotdata, add_legend=T, xlab = "timesteps", ylab= "relative frequency")
    return(plotdata)
}

plotting <- function(data, filename="unknown"){
    #print("plotting")
    jpeg(paste("C:/Users/Franzi/PycharmProjects/biolgca/pictures/", filename, "_mp.jpg"))
    plot(Muller_plot(data, xlab = "timesteps", ylab= "relative frequency"))
    dev.off()
}
#d <- magic(e_name="bsp_0-11_filtered 0.250_edges.csv", p_name="bsp_0-11_filtered 0.250_summed_population.csv", t_name="bsp_0-11_filtered 0.250_summed_timerange.csv")
#d <- magic(e_name="bsp_0-11_filtered 0.250_edges.csv", p_name="bsp_0-11_filtered 0.250_summed_population.csv")

# d <- magic(e_name="real180_bsp100edges.csv", p_name="real180_bsp100last.csv", tend=100)
# d <- magic(e_name="real180_bsp_0-6616_filtered 0.200_edges.csv", p_name="real180_bsp_0-6616_summed_population.csv", t_name="real180_bsp_0-6616_summed_timerange.csv")

# name <- "bsp_int_length=3_cutoff=0.3"
# name <- "bsp_int_length=3_cutoff=0.25"
# name <- "bsp_int_length=5_cutoff=0"
# name <- "bsp_int_length=5_cutoff=0.25"
name <- "5011_0_f8684e7_int_length=250_cutoff=0.004"
d <- magic(e_name=paste(name, "_edges.csv", sep=""), p_name=paste(name, "_population.csv", sep=""), t_name=paste(name, "_trange.csv", sep=""))
plotting(d, filename=name)


